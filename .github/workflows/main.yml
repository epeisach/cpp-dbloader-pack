# This is a basic workflow to help you get started with Actions

name: Testing

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    # branches: [ master ]
  pull_request:
    # branches: [ master ]
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: compile all
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v4
      with:
        submodules: true
    - name: Install dependencies
      run: |
           sudo apt-get clean
           sudo apt-get update
           sudo apt-get install -y cmake flex bison tcsh
    # Runs a single command using the runners shell
    - name: configure
      run: cmake -S . -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=RELEASE
    - name: build
      run: cmake --build ${{github.workspace}}/build --target all -j
    - name: test
      run: cd ${{github.workspace}}/build  && ls test && ctest
      # continue-on-error: true
    - name: Archive test
      uses: actions/upload-artifact@v4
      with:
        name: ctest output
        path: ${{github.workspace}}/build/Testing/Temporary/LastTest.log

    - name: Make dist
      run: cd ${{github.workspace}}/build && make dist

    - name: Archive package
      uses: actions/upload-artifact@v4
      with:
        name: cpack-output
        path: ${{github.workspace}}/build/*.bz2

###################
  test-dist:
    name: compile test distribution
    runs-on: ubuntu-latest
    needs: build

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Download distribution
      uses: actions/download-artifact@v4
      with:
        name: cpack-output

    - name: Install dependencies
      run: |
           sudo apt-get clean
           sudo apt-get update
           sudo apt-get install -y cmake flex bison tcsh

    - name: Capture the artifact filename
      run: |
           echo "distfile=`ls *.bz2`" >> $GITHUB_OUTPUT
      id: distfile

    - name: Extract sources
      run: |
           bzip2 -d -c ${{ steps.distfile.outputs.distfile }} | tar xvf -

    - name: Capture the source tree
      run: |
           echo "src=`ls -d dblo*src`" >> $GITHUB_OUTPUT
      id: srcdir

    - name: configure
      run: cmake -S ${{ steps.srcdir.outputs.src }} -B ${{ steps.srcdir.outputs.src }}/build -DCMAKE_BUILD_TYPE=RELEASE
    - name: build
      run: cmake --build ${{ steps.srcdir.outputs.src }}/build --target all -j
    - name: test
      run: cd ${{ steps.srcdir.outputs.src }}/build  && ls test && ctest
